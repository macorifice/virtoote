.center {
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

.cards-list {
  z-index: 0;
  width: 100%;
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
  padding: 1%;
}

.card {
  margin: 50px auto;
  width: 250px;
  height: 250px;
  border-radius: 40px;
  box-shadow: 5px 5px 30px 7px rgba(0, 0, 0, 0.25),
    -5px -5px 30px 7px rgba(0, 0, 0, 0.22);
  cursor: pointer;
  transition: 0.4s;
}

.card .card_image {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
  width: inherit;
  height: inherit;
  border-radius: 40px;
}

.card .card_image img {
  width: inherit;
  height: inherit;
  border-radius: 40px;
  object-fit: cover;
}

.card .card_title {
  text-align: center;
  border-radius: 0px 0px 40px 40px;
  font-size: 15px;
  font-weight: 900;
  line-height: 21px;
  color: #ffffff;
  margin-top: 30px;
}

.card .card_subtitle {
  text-align: center;
  border-radius: 0px 0px 40px 40px;
  font-size: 14px;
  font-weight: 400;
  line-height: 19px;
  color: rgba(255, 255, 255, 0.5);
  margin-top: 5px;
}

.card:hover {
  transform: scale(0.9, 0.9);
  box-shadow: 5px 5px 30px 15px rgba(0, 0, 0, 0.25),
    -5px -5px 30px 15px rgba(0, 0, 0, 0.22);
}

@media all and (max-width: 500px) {
  .card-list {
    /* On small screens, we are no longer using row direction but column */
    flex-direction: column;
  }
}

$input-bg-color: #69f0ae;
$input-text-color: #121212;
$animation-bounce: cubic-bezier(0.4, -1, 0.6, 2);

@keyframes blink {
  49% {
    opacity: 0;
  }
  50% {
    oppacity: 1;
  }
  51% {
    oppacity: 1;
  }
  52% {
    opacity: 0;
  }
}

// Search Box
.search-box {
  position: relative;

  &__input {
    background-color: $input-bg-color;
    caret-color: $input-bg-color;
    color: $input-text-color;
    border: 0;
    border-radius: 0.4em;
    padding: 0.25em 0.8em;
    font-size: 1em;
    box-shadow: 0 0 0.75em 0.25em rgba($input-bg-color, 0.2);
    transition: box-shadow 0.5s ease;

    // Adds shadow to input
    &:hover,
    &:focus {
      outline: 0;
      box-shadow: 0 0.5em 1.5em 0.25em rgba($input-bg-color, 0.2);
    }

    // Display Search Icon
    + i {
      position: absolute;
      width: 0.125em;
      height: 70%;
      border-radius: 0.2em;
      background-color: $input-text-color;

      left: 0.8em;
      top: 50%;
      transform: rotateZ(-45deg) translateY(-50%);
      transform-origin: top;
      transition: transform 0.5s $animation-bounce;

      &::before {
        content: "";
        display: block;
        position: relative;
        top: 0em;
        left: -0.3em;
        width: 0.5em;
        height: 0.5em;
        border-radius: 100%;
        border: 0.125em solid $input-text-color;
        background-color: $input-bg-color;

        transition: transform 0.5s $animation-bounce;
      }
    }

    // Display custom caret
    &:focus {
      + i {
        transform: rotateZ(0) translateY(-50%);
        animation: blink 1.1s infinite 0.5s;

        &::before {
          transform: rotateY(90deg);
        }
      }
    }

    // When value is not empty
    &[value]:not([value=""]) {
      caret-color: $input-text-color;

      + i {
        display: none;
      }
    }
  }
}

p {
  text-align: center;
}

$search-time: 800ms;
$reset-time: 150ms;

.search-box-mobile {
  border: solid 5px #69f0ae;
  display: inline-block;
  position: relative;
  border-radius: 50px;
  input[type="text"] {
    font-size: 20px;
    font-weight: bold;
    width: 50px;
    height: 50px;
    padding: 5px 40px 5px 10px;
    border: none;
    box-sizing: border-box;
    border-radius: 50px;
    transition: width $search-time cubic-bezier(0.68, -0.55, 0.27, 1.55)
      $reset-time;
    &:focus {
      outline: none;
    }
    &:focus,
    &:not(:placeholder-shown) {
      width: 300px;
      transition: width $search-time cubic-bezier(0.68, -0.55, 0.27, 1.55);
      + button[type="reset"] {
        bottom: 13px;
        right: 10px;
        transition: bottom $reset-time ease-out $search-time,
          right $reset-time ease-out $search-time;
      }
      + button[type="reset"]:after {
        top: 0;
        right: 10px;
        opacity: 1;
        transition: top $reset-time ease-out ($search-time + $reset-time),
          right $reset-time ease-out ($search-time + $reset-time),
          opacity $reset-time ease ($search-time + $reset-time);
      }
    }
  }
  button[type="reset"] {
    background-color: transparent;
    width: 25px;
    height: 25px;
    border: 0;
    padding: 0;
    outline: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    bottom: -13px;
    right: -15px;
    transition: bottom $reset-time ease-out $reset-time,
      right $reset-time ease-out $reset-time;
    &:before,
    &:after {
      content: "";
      height: 25px;
      border-left: solid 5px #69f0ae;
      position: absolute;
      transform: rotate(-45deg);
    }
    &:after {
      transform: rotate(45deg);
      opacity: 0;
      top: -20px;
      right: -10px;
      transition: top $reset-time ease-out, right $reset-time ease-out,
        opacity $reset-time ease-out;
    }
  }
}
